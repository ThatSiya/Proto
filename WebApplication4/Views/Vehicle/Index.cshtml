@model WebApplication4.ViewModels.VehicleIndexViewModel
@using PagedList.Mvc @*PageList Library*@

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-condensed">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().VehName)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.VehYear)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().VehModel)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehEngineNum)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehVinNum)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehRegNum)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().VehLicenseNum)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehExpDate)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehCurrMileage)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehServiceInterval)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehServiceIntervalUnit)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Vehicles.First().VehNextService)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().Farm.FarmName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().VehicleMake.VehMakeDescr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vehicles.First().VehicleType.VehTypeDescr)
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>

    @foreach (var item in Model.Vehicles)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VehName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehYear)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.VehModel)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehEngineNum)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehVinNum)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehRegNum)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.VehLicenseNum)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehExpDate)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehCurrMileage)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehServiceInterval)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehServiceIntervalUnit)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.VehNextService)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Farm.FarmName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleMake.VehMakeDescr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleType.VehTypeDescr)
            </td>
            <td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleType.VehTypeDescr)
            </td>
            <td>
                <a href="@Url.Action("Edit", new { id = item.VehicleID})">
                    <i class="glyphicon glyphicon-pencil"></i>
                    <span class="sr-only">Edit</span>
                </a>
                <a href="@Url.Action("Details", new { id = item.VehicleID })">
                    <i class="glyphicon glyphicon-zoom-in"></i>
                    <span class="sr-only">Details</span>
                </a>
                <a href="@Url.Action("Delete", new { id = item.VehicleID })">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span class="sr-only">Details</span>
                </a>
                @*<a href="@Url.Action("Order", new { id = item.VehicleID })">
                        <i class="glyphicon glyphicon-shopping-cart"></i>
                        <span class="sr-only">Order</span>
                    </a>*@
            </td>
        </tr>
    }

</table>
<p>
    @*condition? first_expression : second_expression*@
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You search for " + Model.Search + " found ")@Model.Vehicles.TotalItemCount vehicles
</p>

@*Generate paging links*@
<div>
    @*wrap in div for presentation purpose*@
    Page @(Model.Vehicles.PageCount < Model.Vehicles.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.Vehicles.PageNumber) of @Model.Vehicles.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.Vehicles, page => Url.Action("Index",@*Takes list of vehicles and produces a hyperlink to each page*@
    new
    {
        farmworkertype = @Model.VehicleType,
        Search = @Model.Search,
        page
    }))
</div>
