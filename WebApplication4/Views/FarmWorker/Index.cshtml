@*@model IEnumerable<WebApplication4.Models.FarmWorker>*@
@*Modify the view to display the new filter using view model*@
@model WebApplication4.ViewModels.FarmWorkerIndexViewModel
@using PagedList.Mvc @*PageList Library*@


@{
    ViewBag.Title = "Farm Workers";
}

<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Resources</a></li>
    <li class="active">Workers</li>
</ol>

    @using (Html.BeginForm("Create", "FarmWorker", FormMethod.Get, new { @class = "form-inline" })) {
        <button class="btn btn-success">Add Inventory</button>
    }
    @*@Html.ActionLink("Create New", "Create")<br />
    @Html.ActionLink("Manage Types", "Index", "FarmWorkerType")<br />*@
<br />
<div class="row">
    
    <div class="col-xs-6 col-md-4">
        @using (Html.BeginForm("Index", "FarmWorker", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="input-group">
                <span>@Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Enter search keyword or phrase" })</span>
                <div class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>
            </div>
        }
    </div>
    @*<div class="col-xs-12 col-md-4">
        @Html.ActionLink("Create New", "Create")<br />
        @Html.ActionLink("Manage Types", "Index", "FarmWorkerType")<br />
    </div>*@
    <div class="col-xs-6 col-md-4">
       
        @using (Html.BeginForm("Index", "FarmWorker", FormMethod.Get))
        {
            <div class="input-group">
                <label>Filter By Type</label> @*@Html.DropDownList("InventoryType","All")*@
                @Html.DropDownListFor(vm => vm.FarmWorkerType, Model.FarmWorkerTypeFilterItems, "All")
                <input type="submit" value="Filter" />
                <input type="hidden" name="Search" id="Search" value="@Model.Search">
            </div>
        }
    </div>
</div>
<br />


            <table class="table table-striped table-bordered table-condensed">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerFName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerLName)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerContactNum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerPhysicalAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().ContractStartDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().ContractEndDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerIDNum)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerType.FarmWorkerTypeDescr)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().Gender.GenderDescr)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FarmWorkers.First().Title.TitleDescr)
                        </th>*@
                    <th>
                        @Html.DisplayName("Actions")
                    </th>
                </tr>

                @foreach (var item in Model.FarmWorkers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FarmWorkerFName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FarmWorkerLName)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.FarmWorkerContactNum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FarmWorkerPhysicalAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContractStartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContractEndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FarmWorkerIDNum)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.FarmWorkerType.FarmWorkerTypeDescr)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.Gender.GenderDescr)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title.TitleDescr)
                            </td>*@
                        <td>
                            <a href="@Url.Action("Edit", new { id = item.FarmWorkerNum })">
                                <i class="glyphicon glyphicon-pencil"></i>
                                <span class="sr-only">Edit</span>
                            </a> 
                            <a href="@Url.Action("Details", new { id = item.FarmWorkerNum })">
                                <i class="glyphicon glyphicon-zoom-in"></i>
                                <span class="sr-only">Edit</span>
                            </a> 
                            <a href="@Url.Action("Delete", new { id = item.FarmWorkerNum })">
                                <i class="glyphicon glyphicon-trash"></i>
                                <span class="sr-only">Edit</span>
                            </a>
                        </td>
                    </tr>
                }

            </table>
            <p>
                @*condition? first_expression : second_expression*@
                @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You search for " + Model.Search + " found ")@Model.FarmWorkers.TotalItemCount farm workers
            </p>

            @*Generate paging links*@
            <div>
                @*wrap in div for presentation purpose*@
                Page @(Model.FarmWorkers.PageCount < Model.FarmWorkers.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.FarmWorkers.PageNumber) of @Model.FarmWorkers.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.FarmWorkers, page => Url.Action("Index",@*Takes list of inventories and produces a hyperlink to each page*@
    new
    {
        farmworkertype = @Model.FarmWorkerType,
        Search = @Model.Search,
        page
    }))
</div>
