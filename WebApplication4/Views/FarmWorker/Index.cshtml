@*@model IEnumerable<WebApplication4.Models.FarmWorker>*@
@*Modify the view to display the new filter using view model*@
@model WebApplication4.ViewModels.FarmWorkerIndexViewModel
@using PagedList.Mvc @*PageList Library*@


@{
    ViewBag.Title = "Farm Workers";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "FarmWorker", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="row">
        <div class="col-xs-6 col-md-4">
            <div class="input-group">
                <span>@Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Enter search keyword or phrase" })</span>
                <div class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "FarmWorker", FormMethod.Get))
    {
        <label>Filter By Type</label> @*@Html.DropDownList("InventoryType","All")*@
        @Html.DropDownListFor(vm => vm.FarmWorkerType, Model.FarmWorkerTypeFilterItems, "All")
        <input type="submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search">
    }
</p>
<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerFName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerLName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerContactNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerPhysicalAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().ContractStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().ContractEndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerIDNum)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.FarmWorkers.First().FarmWorkerType.FarmWorkerTypeDescr)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().Gender.GenderDescr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FarmWorkers.First().Title.TitleDescr)
            </th>*@
        <th>
            @Html.DisplayName("Actions")
        </th>
    </tr>

    @foreach (var item in Model.FarmWorkers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FarmWorkerFName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FarmWorkerLName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.FarmWorkerContactNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FarmWorkerPhysicalAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContractStartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContractEndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FarmWorkerIDNum)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.FarmWorkerType.FarmWorkerTypeDescr)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Gender.GenderDescr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title.TitleDescr)
                </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.FarmWorkerNum }) |
                @Html.ActionLink("Details", "Details", new { id = item.FarmWorkerNum }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.FarmWorkerNum })
            </td>
        </tr>
    }

</table>
<p>
    @*condition? first_expression : second_expression*@
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You search for " + Model.Search + " found ")@Model.FarmWorkers.TotalItemCount farm workers
</p>

@*Generate paging links*@
<div>
    @*wrap in div for presentation purpose*@
    Page @(Model.FarmWorkers.PageCount < Model.FarmWorkers.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.FarmWorkers.PageNumber) of @Model.FarmWorkers.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.FarmWorkers, page => Url.Action("Index",@*Takes list of inventories and produces a hyperlink to each page*@
    new
    {
        farmworkertype = @Model.FarmWorkerType,
        Search = @Model.Search,
        page
    }))
</div>
