@model WebApplication4.ViewModels.InventoryIndexViewModel
@using PagedList.Mvc @*PageList Library*@

@{
    ViewBag.Title = "Inventory";
}

<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Resources</a></li>
    <li class="active">Inventory</li>
</ol>

<p>
</p>
<div class="well">
    <div class="row">

        <div class="col-xs-6 col-md-4">
            @using (Html.BeginForm("Create", "Inventory", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="input-group">
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit">
                            <span class="glyphicon glyphicon-plus"></span>
                            Add Inventory
                        </button>
                    </div>
                </div>
            }
        </div>
        <div class="col-xs-6 col-md-4">
            @using (Html.BeginForm("Index", "Inventory", FormMethod.Get))
            {
                    <div class="input-group">
                        @Html.Label("Filter by type:")
                        <span>@Html.DropDownListFor(vm => vm.InventoryType, Model.InvTypeFilterItems, "All")</span>
                        @*<div class="input-group-btn">*@
                            <button class="btn btn-info" type="submit">
                                <span class="glyphicon glyphicon-filter"></span>
                            </button>
                            @*</div>*@
                            @*<input type="hidden" name="Search" id="Search" value="@Model.Search">*@
                        </div>
                @*</div>*@
            }
        </div>
            <div class="col-xs-6 col-md-4">
                @using (Html.BeginForm("Index", "Inventory", FormMethod.Get, new { @class = "form-inline" }))
            {
                    <div class="input-group">
                        <span>@Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Enter search keyword or phrase" })</span>
                        <div class="input-group-btn">
                            <button class="btn btn-info" type="submit">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <table class="table table-condensed table-striped">
        <thead>
            <tr>
                <th>
                    <span style="color:green;">@Html.DisplayNameFor(model => model.Inventories.First().InvDescr)</span>
                </th>
                <th>
                    <span style="color:green;">@Html.DisplayNameFor(model => model.Inventories.First().InvQty)</span>
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Inventories.First().InvDatePurchased)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.Inventories.First().InvCode)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.Inventories.First().InvSIUnit)
                    </th>*@
                <th>
                    <span style="color:green;">@Html.DisplayNameFor(model => model.Inventories.First().InventoryType.InvTypeDescr)</span>
                </th>
                <th>
                    <span style="color:green;">@Html.DisplayName("Actions")</span>
                </th>
            </tr>
        </thead>

        @foreach (var item in Model.Inventories)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InvDescr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InvQty)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.InvDatePurchased)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.InvCode)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.InvSIUnit)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.InventoryType.InvTypeDescr)
                </td>
                <td>
                    <!-- Split button -->
                    <div class="btn-group">
                        <button type="button" class="btn btn-success">Options</button>
                        <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink(" Edit", "Edit", new { id = item.InventoryID }, new { @class = "glyphicon glyphicon-pencil" })</li>
                            <li role="separator" class="divider"></li>
                            <li>@Html.ActionLink(" Details", "Details", new { id = item.InventoryID }, new { @class = "glyphicon glyphicon-zoom-in" })</li>
                            <li role="separator" class="divider"></li>
                            <li>@Html.ActionLink(" Delete", "Delete", new { id = item.InventoryID }, new { @class = "glyphicon glyphicon-trash" })</li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#">Place Order</a></li>
                        </ul>
                    </div>
            </tr>
        }

    </table>
    <p>
        @*condition? first_expression : second_expression*@
        @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You searched for '" + Model.Search + "' found ")@Model.Inventories.TotalItemCount inventory items
    </p>

    @*Generate paging links*@
    <div>
        @*wrap in div for presentation purpose*@
        Page @(Model.Inventories.PageCount < Model.Inventories.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.Inventories.PageNumber) of @Model.Inventories.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.Inventories, page => Url.Action("Index",@*Takes list of inventories and produces a hyperlink to each page*@
    new
    {
        farmworkertype = @Model.InventoryType,
        Search = @Model.Search,
        page
    }))
</div>
