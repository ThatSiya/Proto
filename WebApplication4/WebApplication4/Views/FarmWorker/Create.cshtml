<style>
    /* input [type = file]
    ----------------------------------------------- */
    input[type=file] {
        display: block !important;
        right: 1px;
        top: 1px;
        height: 34px;
        opacity: 0;
        width: 100%;
        background: none;
        position: absolute;
        overflow: hidden;
        z-index: 2;
    }

    .control-fileupload {
        display: block;
        border: 1px solid #d6d7d6;
        background: #FFF;
        border-radius: 4px;
        width: 100%;
        height: 36px;
        line-height: 36px;
        padding: 0px 10px 2px 10px;
        overflow: hidden;
        position: relative;
        /* File upload button */
    }

        .control-fileupload:before,
        .control-fileupload input,
        .control-fileupload label {
            cursor: pointer !important;
        }

        .control-fileupload:before {
            /* inherit from boostrap btn styles */
            padding: 4px 12px;
            margin-bottom: 0;
            font-size: 14px;
            color: #333333;
            text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
            vertical-align: middle;
            cursor: pointer;
            background-color: #f5f5f5;
            background-image: linear-gradient(to bottom, #ffffff, #e6e6e6);
            background-repeat: repeat-x;
            border: 1px solid #cccccc;
            border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
            border-bottom-color: #b3b3b3;
            border-radius: 4px;
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: color 0.2s ease;
            /* add more custom styles*/
            content: 'Browse';
            display: block;
            position: absolute;
            z-index: 1;
            top: 2px;
            right: 2px;
            line-height: 20px;
            text-align: center;
        }

        .control-fileupload:hover:before,
        .control-fileupload:focus:before {
            background-color: #e6e6e6;
            color: #333333;
            text-decoration: none;
            background-position: 0 -15px;
            transition: background-position 0.2s ease-out;
        }

        .control-fileupload label {
            line-height: 24px;
            color: #999999;
            font-size: 14px;
            font-weight: normal;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            position: relative;
            z-index: 1;
            margin-right: 90px;
            margin-bottom: 0px;
            cursor: text;
        }
</style>

@model WebApplication4.Models.FarmWorker
@{
    ViewBag.Title = "Add Worker";
}
<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Resources</a></li>
    <li>@Html.ActionLink("Workers Action Page", "ActionPage", "FarmWorker")</li>
    <li>@Html.ActionLink("Manage Workers", "Index", "FarmWorker")</li>
    <li class="active">Edit Worker</li>
</ol>
<hr />
<div class="row">
    <div class="col-xs-6 col-md-3">
        @using (Html.BeginForm("Create", "FarmWorkerType", FormMethod.Get, new { @class = "form-inline" }))
            {
            <div class="input-group">
                <div class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-plus"></span>
                        Add Worker Type
                    </button>
                </div>
            </div>
        }
    </div>
    <div class="col-xs-6 col-md-3">
        @using (Html.BeginForm("Create", "FarmWorkerType", FormMethod.Get, new { @class = "form-inline" }))
            {
            <div class="input-group">
                <div class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-plus"></span>
                        Add Farm
                    </button>
                </div>
            </div>
        }
    </div>
</div>
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b>Edit Worker Personal Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.FarmWorkerFName, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.FarmWorkerFName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FarmWorkerFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.FarmWorkerLName, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.FarmWorkerLName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FarmWorkerLName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4" style="text-align: left">
                                @Html.LabelFor(model => model.FarmWorkerIDNum, htmlAttributes: new { @class = "control-label " })
                            </div>

                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.FarmWorkerIDNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FarmWorkerIDNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4" style="text-align: left">
                                @Html.LabelFor(model => model.FarmWorkerContactNum, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.FarmWorkerContactNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FarmWorkerContactNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.TitleID, "Title", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.DropDownList("TitleID", null, htmlAttributes: new { @class = "form-control" })
                                @*@Html.DropDownList("FarmWorkerTypeID", null, htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.TitleID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.GenderID, "Gender", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control" })
                                @*@Html.DropDownList("FarmWorkerTypeID", null, htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-xs-6 col-md-12">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-2">
                                @Html.LabelFor(model => model.FarmWorkerImg, "Upload Image", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @*@Html.DropDownList("TitleID", null, htmlAttributes: new { @class = "form-control" })*@
                                <span class="control-fileupload">
                                    <label for="file">Choose File :</label>
                                    <input type="file" id="file">
                                </span>
                                @*@Html.ValidationMessageFor(model => model.TitleID, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b>Edit Worker Residential Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.Surburb, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.Surburb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surburb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">

                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b>Edit Worker Contract Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.ContractStartDate, "Start Date", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.ContractStartDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContractStartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.ContractEndDate, "End Date", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.EditorFor(model => model.ContractEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContractEndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.FarmWorkerTypeID, "Worker Type", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.DropDownList("FarmWorkerTypeID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FarmWorkerTypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.FarmWorkerTypeID, "Farm", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-8">
                                @Html.DropDownList("FarmID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FarmWorkerTypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="input-group">
        <div class="input-group-btn">
            <button class="btn btn-success" type="submit" id="btnSave">
                <span class="glyphicon glyphicon-bookmark"></span>
                Save
            </button>
        </div>
    </div>
}
<div class="col-xs-6 col-md-6">
    @using (Html.BeginForm("Index", "FarmWorker", FormMethod.Get, new { @class = "form-inline" }))
    {
        <div class=input-group>
            <div class="input-group-btn">
                <button class="btn btn-success" type="submit" id="btnBack">
                    <span class="glyphicon glyphicon-arrow-left"></span>
                    Back to List
                </button>
            </div>
        </div>
    }
    @*@using (Html.BeginForm("Create", "Inventory", FormMethod.Post, new { @class = "form-inline"}))
        {
            @Html.AntiForgeryToken()

            <div class="col-xs-6 col-md-4">
                <div class="input-group">
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit">
                            <span class="glyphicon glyphicon-bookmark"></span>
                            Save
                        </button>
                    </div>
                </div>
            </div>
        }*@
</div>

<script>
    $(function () {
        $('input[type=file]').change(function () {
            var t = $(this).val();
            var labelText = 'File : ' + t.substr(12, t.length);
            $(this).prev('label').text(labelText);
        })
    });
</script>

