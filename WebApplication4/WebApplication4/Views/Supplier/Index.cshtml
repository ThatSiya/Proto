@model WebApplication4.ViewModels.SupplierIndexViewModel
@using PagedList.Mvc @*PageList Library*@


@{
    ViewBag.Title = "Index";
}

<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Resources</a></li>
    <li class="active">Suppliers</li>
</ol>

<div class="well">
    <div class="row">
        <div class="col-xs-6 col-md-4">
            @using (Html.BeginForm("Create", "Supplier", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="input-group">
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit">
                            <span class="glyphicon glyphicon-plus"></span>
                            Add Supplier
                        </button>
                    </div>
                </div>
            }
        </div>
        <div class="col-xs-6 col-md-4">
            @using (Html.BeginForm("Index", "Supplier", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="input-group">
                    <span>@Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Enter search keyword or phrase" })</span>
                    <div class="input-group-btn">
                        <button class="btn btn-info" type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<table class="table table-condensed table-striped">
    <thead>
        <tr>
            <th>
                <span style="color:green;">@Html.DisplayNameFor(model => model.Suppliers.First().SupplierName)</span>
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Surburb)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Province)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierEmailAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierPhoneNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierCellNum)
                </th>*@
            <th>
                <span style="color:green;">Actions</span>
            </th>
        </tr>
    </thead>
    @foreach (var item in Model.Suppliers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surburb)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Province)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierEmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierPhoneNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierCellNum)
                </td>*@
            <td>
                <a href="@Url.Action("Edit", new { id = item.SupplierID })" data-toggle="tooltip" title="Edit">
                    <i class="glyphicon glyphicon-pencil"></i>
                    <span class="sr-only">Edit</span>
                </a>
                <a href="@Url.Action("Details", new { id = item.SupplierID })" data-toggle="tooltip" title="Details">
                    <i class="glyphicon glyphicon-zoom-in"></i>
                    <span class="sr-only">Edit</span>
                </a>
                <a href="@Url.Action("Delete", new { id = item.SupplierID })" data-toggle="tooltip" title="Delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span class="sr-only">Edit</span>
                </a>
            </td>
        </tr>
    }

</table>
<p>
    @*condition? first_expression : second_expression*@
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You searched for '" + Model.Search + "' found ")@Model.Suppliers.TotalItemCount suppliers
</p>

@*Generate paging links*@
<div>
    @*wrap in div for presentation purpose*@
    Page @(Model.Suppliers.PageCount < Model.Suppliers.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.Suppliers.PageNumber) of @Model.Suppliers.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.Suppliers, page => Url.Action("Index",@*Takes list of suppliers and produces a hyperlink to each page*@
    new
    {
        //farmworkertype = @Model.InventoryType,
        Search = @Model.Search,
        page
    }))
</div>
