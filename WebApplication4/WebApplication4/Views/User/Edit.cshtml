@model WebApplication4.Models.User

@{
    ViewBag.Title = "Register User";
}

<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Admin</a></li>
    <li><a href="#">Users</a></li>
    <li>@Html.ActionLink("Manage Users", "Index", "User")</li>
    <li class="active">Update User</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserID)
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b>Update User Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserFName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserFName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserLName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserLName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserLName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserContractNum, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserContractNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserContractNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserIDNum, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserIDNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserIDNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.LabelFor(model => model.UserEmailAddress, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.EditorFor(model => model.UserEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserEmailAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                @*//This option is emailed as a link to the User*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="row">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-4">
                                @Html.Label("Access Role")
                                @*@Html.LabelFor(model => model.UserAccessLevelID, "UserAccessLevelID", htmlAttributes: new { @class = "control-label" })*@
                            </div>
                            <div class="col-xs-6 col-md-6">
                                @Html.DropDownList("UserAccessLevelID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserAccessLevelID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="input-group">
        <div class="input-group-btn">
            <button class="btn btn-success" type="submit" id="btnSave" @*style="float:right"*@>
                <span class="glyphicon glyphicon-bookmark"></span>
                Save
            </button>
        </div>
    </div>
}

<div class="col-xs-6 col-md-6">
    @using (Html.BeginForm("Index", "User", FormMethod.Get, new { @class = "form-inline" }))
    {
        <div class=input-group>
            <div class="input-group-btn">
                <button class="btn btn-success" type="submit" id="btnBack" @*id="btnBack"*@>
                    <span class="glyphicon glyphicon-arrow-left"></span>
                    Back to List
                </button>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}