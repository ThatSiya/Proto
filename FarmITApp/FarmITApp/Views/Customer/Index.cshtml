@model FarmITApp.ViewModels.CustomerIndexViewModel
    @using PagedList.Mvc

@{
    ViewBag.Title = "Customers";
}

<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="#">Admin</a></li>
    <li class="active">Customers</li>
</ol>

<div class="well">
    <div class="row">

        <div class="col-xs-6 col-md-2">
            @using (Html.BeginForm("Create", "Customer", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="input-group">
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit">
                            <span class="glyphicon glyphicon-plus"></span>
                            Add Customer
                        </button>
                    </div>
                </div>
            }
        </div>
        <div class="col-xs-6 col-md-3">
            @using (Html.BeginForm("Index", "Customer", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="input-group">
                    <span>@Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Enter search keyword or phrase" })</span>
                    <div class="input-group-btn">
                        <button class="btn btn-info" type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<table id="customers" class="table table-striped table-condensed">
    <thead>
        <tr>
            <th>
                <span style="color:green;">@Html.DisplayNameFor(model => model.Customers.First().CustomerFName)</span>
            </th>
            <th>
                <span style="color:green;">@Html.DisplayNameFor(model => model.Customers.First().CustomerLName)</span>
            </th>
            <th>
                <span style="color:green;">@Html.DisplayNameFor(model => model.Customers.First().CompanyName)</span>
            </th>
            <th>
                <span style="color:green;">Actions</span>
            </th>
        </tr>
    </thead>
    @foreach (var item in Model.Customers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerFName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerLName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                <a href="@Url.Action("Edit", new { id = item.CustomerID})" data-toggle="tooltip" title="Edit">
                    <i class="glyphicon glyphicon-pencil"></i>
                    <span class="sr-only">Edit</span>
                </a>
                <a href="@Url.Action("Details", new { id = item.CustomerID })" data-toggle="tooltip" title="Details">
                    <i class="glyphicon glyphicon-zoom-in"></i>
                    <span class="sr-only">Details</span>
                </a>
                @*<a href="@Url.Action("Delete", new { id = item.CustomerID })" data-toggle="tooltip" title="Delete">
                        <i class="glyphicon glyphicon-trash"></i>
                        <span class="sr-only">Details</span>
                    </a>*@

                @*<button data-customer-id="@item.CustomerID" class="btn-link js-delete">Delete</button>*@
                <a data-customer-id="@item.CustomerID" class="js-delete" data-toggle="tooltip" title="Delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span class="sr-only">Details</span>
                </a>
            </td>
        </tr>
    }

</table>
@section scripts{
    <script>
        $(document).ready(function () {
            $("#customers .js-delete").on("click", function () {
                var button = $(this);
                bootbox.confirm("Please confirm you want to remove this item", function (result) {
                    if (result) {
                        $.ajax({
                            url: '/Customer/Create/',
                            method: "CREATE",
                            type: "GET",
                            success: function () {
                                console.log("Success");
                            }

                        });
                    }
                });
            });
        })
        </script>
    }
<p>
    @*condition? first_expression : second_expression*@
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all " : "You search for " + Model.Search + " found ")@Model.Customers.TotalItemCount customers
</p>

@*Generate paging links*@
<div>
    @*wrap in div for presentation purpose*@
    Page @(Model.Customers.PageCount < Model.Customers.PageNumber ? 0 : @*evaluate whether or not there are any pages to display*@
    Model.Customers.PageNumber) of @Model.Customers.PageCount @*Display Page x of y*@
    @Html.PagedListPager(Model.Customers, page => Url.Action("Index",@*Takes list of inventories and produces a hyperlink to each page*@
    new
    {
        Search = @Model.Search,
        page
    }))
</div>
